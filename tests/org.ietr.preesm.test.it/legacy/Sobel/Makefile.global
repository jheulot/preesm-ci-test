include ../GlobalPaths

# ARM Compiler for A9
LINUXCC= -I$(WORKSPACE)/include \
	 -I$(WORKSPACE)/include/arm \
	 -I$(USERSPACE_SYSLINK)/target/include/syslink \
	 -O3 \
	 -Wall \
	 -c

LINUXLINK= -L$(WORKSPACE)/lib/arm \
	   -L$(USERSPACE_SYSLINK)/target/lib \
	   -L$(BUILDROOT)/output/target/usr/lib
	 
LINUXLIBS= -ld2cmap -lprocmgr -lomap4430proc -lipcutils -lsyslinknotify \
	   -lipc -lrt -lsysmgr -lrcm -lgcc -lmemmgr -lpthread -lmemmgr $(LIBS_A9)

# M3 and DSP C Compiler
BIOSFLAGS= \
	--include_path=$(BIOS)/packages/ti/bios/include \
	--include_path=$(WORKSPACE)/include  \
	--abi=eabi  \
	--preproc_with_compile 

BIOSLINK= --abi=eabi  \
	 -z  \
	 --reread_libs  \
	 --warn_sections  \
	 --rom_model\

ARMFLAGS=  $(BIOSFLAGS) \
	--include_path=$(CROSSTMS)/include \
	-O3

ARMLINK= $(BIOSLINK) \
	 -i$(CROSSTMS)/lib  \
	 -i$(CROSSTMS)/include

DSPFLAGS=  $(BIOSFLAGS) \
	--include_path=$(CROSS6000)/include \
	-O3	

DSPLINK= $(BIOSLINK) \
	 -i$(CROSSC6000)/lib  \
	 -i$(CROSSC6000)/include
	

BIOSLIBS= -l"libc.a"  

all:
ifeq "$(TYPE)" "EXE" 
	@echo "\033[31mBuild exe\033[0m"	
	@echo "\033[32m * Build A9\033[0m"
	@make -s build/$(PROGNAME)	
	@echo "\033[32m * Build SYS\033[0m"	
	@make -s build/$(PROGNAME)_sys.xem3
	@echo "\033[32m * Build APP\033[0m"
	@make -s build/$(PROGNAME)_app.xem3
	@echo "\033[32m * Build DSP\033[0m"	
	@make -s build/$(PROGNAME)_dsp.xe64T	
endif
ifeq "$(TYPE)" "LIB"
	@echo "\033[31mBuild lib\033[0m"
	@echo "\033[32m * Build A9\033[0m"
	@make -s build/$(PROGNAME)_arm.a
	@echo "\033[32m * Build SYS\033[0m"
	@make -s build/$(PROGNAME)_sys.lib
	@echo "\033[32m * Build APP\033[0m"
	@make -s build/$(PROGNAME)_app.lib
	@echo "\033[32m * Build DSP\033[0m"
	@make -s build/$(PROGNAME)_dsp.lib
endif

build:
	@if [ "$(TYPE)" = "EXE" ]; then					\
		mkdir -p build/A9 build/DSP build/SYS build/APP;	\
		mkdir -p $(OUTPUT);					\
	else 								\
		mkdir -p build/A9 build/DSP build/SYS build/APP;	\
		mkdir -p $(WORKSPACE)/lib/arm $(WORKSPACE)/lib/app; 	\
		mkdir -p $(WORKSPACE)/lib/sys $(WORKSPACE)/lib/dsp;	\
	fi

################
### Cleaning ###
################

clean: cleanA9 cleanSYS cleanAPP cleanDSP
mrproper: 
	rm -rf build

cleanA9:
	rm -rf build/A9/obj  build/$(PROGNAME)

cleanDSP:
	rm -rf build/DSP/obj build/$(PROGNAME)_dsp.xe64T

cleanSYS:
	rm -rf build/SYS/obj build/$(PROGNAME)_sys.xem3

cleanAPP:
	rm -rf build/APP/obj build/$(PROGNAME)_app.xem3

###############
### Install ###
###############

DIRS_XDC=build/DSP/configPkg build/APP/configPkg build/SYS/configPkg 
DIRS_EXE=$(OUTPUT) 
DIRS_LIB=$(WORKSPACE)/lib/arm $(WORKSPACE)/lib/app $(WORKSPACE)/lib/sys $(WORKSPACE)/lib/dsp $(WORKSPACE)/include/ 

define make_dir
$(1): 
	@mkdir -p $$@
endef

$(foreach dirs, $(DIRS_EXE), $(eval $(call make_dir,$(dirs))))
$(foreach dirs, $(DIRS_LIB), $(eval $(call make_dir,$(dirs))))
$(foreach dirs, $(DIRS_XDC), $(eval $(call make_dir,$(dirs))))

ifeq "$(TYPE)" "EXE"
install:  $(DIRS_EXE) all
ifneq ($(strip $(SRC_A9)),)	
	cp build/$(PROGNAME) $(OUTPUT)/$(PROGNAME)
endif
ifneq ($(strip $(SRC_DSP)),)	
	cp build/$(PROGNAME)_dsp.xe64T $(OUTPUT)/$(PROGNAME)_dsp.xe64T
endif
ifneq ($(strip $(SRC_SYS)),)	
	cp build/$(PROGNAME)_sys.xem3  $(OUTPUT)/$(PROGNAME)_sys.xem3
endif
ifneq ($(strip $(SRC_APP)),)	
	cp build/$(PROGNAME)_app.xem3  $(OUTPUT)/$(PROGNAME)_app.xem3
endif
endif
ifeq "$(TYPE)" "LIB"
install:  $(DIRS_LIB) all
ifneq ($(strip $(SRC_A9)),)	
	cp build/$(PROGNAME)_arm.a   $(WORKSPACE)/lib/arm/$(PROGNAME)_arm.a
endif
ifneq ($(strip $(SRC_DSP)),)	
	cp build/$(PROGNAME)_dsp.lib $(WORKSPACE)/lib/dsp/$(PROGNAME)_dsp.lib
endif
ifneq ($(strip $(SRC_SYS)),)	
	cp build/$(PROGNAME)_sys.lib $(WORKSPACE)/lib/sys/$(PROGNAME)_sys.lib
endif
ifneq ($(strip $(SRC_APP)),)	
	cp build/$(PROGNAME)_app.lib $(WORKSPACE)/lib/app/$(PROGNAME)_app.lib
endif
	cp $(H_LIB) $(WORKSPACE)/include/
endif


########################
### Building C files ###
########################

define build_A9
build/A9/obj/$(subst .c,.o,$(1)): $(1)
	@echo "CC\t$(1)"
	mkdir -p $$(dir $$@)	
	$(CROSSCC)/arm-none-linux-gnueabi-gcc $(LINUXCC) $(FLAGS_A9) -o $$@ $$<
endef

define build_DSP
build/DSP/obj/$(subst .c,.o,$(1)): $(1) build/DSP/configPkg/compiler.opt
	@echo "CC\t$(1)"
	mkdir -p $$(dir $$@)	
	$(CROSSC6000)/bin/cl6x -mv64+ $(DSPFLAGS) $(FLAGS_DSP) --output_file=$$@ --cmd_file=build/DSP/configPkg/compiler.opt $$<
endef

define build_SYS
build/SYS/obj/$(subst .c,.o,$(1)): $(1) build/SYS/configPkg/compiler.opt
	@echo "CC\t$(1)"
	mkdir -p $$(dir $$@)	
	$(CROSSTMS)/bin/cl470 -mv7M3 $(ARMFLAGS) $(FLAGS_SYS) --output_file=$$@ --cmd_file=build/SYS/configPkg/compiler.opt $$<
endef

define build_APP
build/APP/obj/$(subst .c,.o,$(1)): $(1) build/APP/configPkg/compiler.opt
	@echo "CC\t$(1)"
	mkdir -p $$(dir $$@)	
	$(CROSSTMS)/bin/cl470 -mv7M3 $(ARMFLAGS) $(FLAGS_APP) --output_file=$$@ --cmd_file=build/APP/configPkg/compiler.opt $$<
endef

$(foreach src, $(SRC_A9), $(eval $(call build_A9,$(src))))
$(foreach src, $(SRC_DSP), $(eval $(call build_DSP,$(src))))
$(foreach src, $(SRC_SYS), $(eval $(call build_SYS,$(src))))
$(foreach src, $(SRC_APP), $(eval $(call build_APP,$(src))))

OBJ_A9 = $(foreach src, $(SRC_A9), build/A9/obj/$(subst .c,.o,$(src)))
OBJ_DSP = $(foreach src, $(SRC_DSP), build/DSP/obj/$(subst .c,.o,$(src)))
OBJ_SYS = $(foreach src, $(SRC_SYS), build/SYS/obj/$(subst .c,.o,$(src)))
OBJ_APP = $(foreach src, $(SRC_APP), build/APP/obj/$(subst .c,.o,$(src)))

##########################
### Building CFG Files ###
##########################
XDCFLAGS=--xdcpath="$(BIOS)/packages;$(BIOS_SYSLINK)/packages" xdc.tools.configuro

build/DSP/configPkg/compiler.opt: cfg/Tesla.cfg $(dir $@)
	@echo "XDC\t$(notdir $<)"
	$(CROSSXDC)/xs $(XDCFLAGS) -o build/DSP/configPkg -t ti.targets.elf.C64T -p ti.omap.platform.dsp -r whole_program -c $(CROSSC6000) $^

build/SYS/configPkg/compiler.opt: cfg/SysM3.cfg $(dir $@)
	@echo "XDC\t$(notdir $<)"
	$(CROSSXDC)/xs $(XDCFLAGS) -o build/SYS/configPkg -t ti.targets.arm.elf.M3 -p ti.omap.platform.core0 -r whole_program -c "$(CROSSTMS)" --cfgArgs "{ useWA: false, usePM: true, useCache: true }" $^

build/APP/configPkg/compiler.opt: cfg/AppM3.cfg $(dir $@)
	@echo "XDC\t$(notdir $<)"
	$(CROSSXDC)/xs $(XDCFLAGS) -o build/APP/configPkg -t ti.targets.arm.elf.M3 -p ti.omap.platform.core1 -r whole_program -c "$(CROSSTMS)" --cfgArgs "{ useWA: false, usePM: true, useCache: true }" $^

##################
### Libs files ###
##################

LIBSA9=$(foreach lib,$(LIBS),-l$(lib)_arm )
DEPLIBSA9=$(foreach lib,$(LIBS),$(WORKSPACE)/lib/arm/lib$(lib)_arm.a )

LIBSDSP=$(foreach lib,$(LIBS),-llib$(lib)_dsp.lib) 
DEPLIBSDSP=$(foreach lib,$(LIBS),$(WORKSPACE)/lib/dsp/lib$(lib)_dsp.lib )

LIBSSYS=$(foreach lib,$(LIBS),-llib$(lib)_sys.lib) 
DEPLIBSSYS=$(foreach lib,$(LIBS),$(WORKSPACE)/lib/sys/lib$(lib)_sys.lib )

LIBSAPP=$(foreach lib,$(LIBS),-llib$(lib)_app.lib )
DEPLIBSAPP=$(foreach lib,$(LIBS),$(WORKSPACE)/lib/app/lib$(lib)_app.lib )

############################
### Building Executables ###
############################

build/$(PROGNAME): $(OBJ_A9) $(DEPLIBSA9)
ifeq ($(strip $(SRC_A9)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSCC)/arm-none-linux-gnueabi-gcc $(LINUXLINK) -o $@ $(OBJ_A9) $(LINUXLIBS) $(LIBSA9)
endif

build/$(PROGNAME)_dsp.xe64T: $(OBJ_DSP) $(DEPLIBSDSP)
ifeq ($(strip $(SRC_DSP)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSC6000)/bin/cl6x -mv64+ -i"$(WORKSPACE)/lib/dsp" $(DSPLINK) -o $@  -l"build/DSP/configPkg/linker.cmd" $(OBJ_DSP) $(BIOSLIBS) $(LIBSDSP)
endif


build/$(PROGNAME)_sys.xem3: $(OBJ_SYS) $(DEPLIBSSYS)
ifeq ($(strip $(SRC_SYS)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSTMS)/bin/cl470 -mv7M3 -i"$(WORKSPACE)/lib/sys" $(ARMLINK) -o $@  -l"build/SYS/configPkg/linker.cmd" $(OBJ_SYS) $(BIOSLIBS) $(LIBSSYS)
endif


build/$(PROGNAME)_app.xem3: $(OBJ_APP) $(DEPLIBSAPP)
ifeq ($(strip $(SRC_APP)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSTMS)/bin/cl470 -mv7M3 -i"$(WORKSPACE)/lib/app" $(ARMLINK) -o $@  -l"build/APP/configPkg/linker.cmd" $(OBJ_APP) $(BIOSLIBS) $(LIBSAPP) 
endif


########################
### Building library ###
########################

build/$(PROGNAME)_arm.a: $(OBJ_A9) $(DEPLIBSA9)
ifeq ($(strip $(SRC_A9)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSCC)/arm-none-linux-gnueabi-ar -r $@ $^
endif

build/$(PROGNAME)_dsp.lib: $(OBJ_DSP) $(DEPLIBSDSP)
ifeq ($(strip $(SRC_DSP)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSC6000)/bin/ar6x r $@ $^
endif

build/$(PROGNAME)_sys.lib: $(OBJ_SYS) $(DEPLIBSSYS)
ifeq ($(strip $(SRC_SYS)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSTMS)/bin/ar470 -r $@ $^
endif

build/$(PROGNAME)_app.lib: $(OBJ_APP) $(DEPLIBSAPP)
ifeq ($(strip $(SRC_APP)),)
	@echo "No source to build"
else	
	@echo "LINK\t$(notdir $@)"
	$(CROSSTMS)/bin/ar470 -r $@ $^
endif

