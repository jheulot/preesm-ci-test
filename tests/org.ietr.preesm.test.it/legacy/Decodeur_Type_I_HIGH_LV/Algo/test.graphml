<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="graph_desc" attr.type="string" for="node" id="graph_desc"/>
    <key attr.name="name" attr.type="string" for="graph" id="name"/>
    <key attr.name="name" attr.type="string" for="node" id="name"/>
    <key attr.name="arguments" attr.type="string" for="node" id="arguments"/>
    <key attr.name="parameters" attr.type="string" for="graph" id="parameters"/>
    <key attr.name="variables" attr.type="string" for="graph" id="variables"/>
    <key attr.name="edge_prod" attr.type="string" for="edge" id="edge_prod">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="edge_delay" attr.type="string" for="edge" id="edge_delay">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="edge_cons" attr.type="string" for="edge" id="edge_cons">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="data_type" attr.type="string" for="edge" id="data_type">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFTextualEdgePropertyTypeFactory</desc>
    </key>
    <graph edgedefault="directed">
        <data key="name"/>
        <data key="parameters"/>
        <data key="variables">
            <variable name="edge" value="16"/>
            <variable name="taille_flux" value="720*576"/>
            <variable name="xpic" value="720"/>
            <variable name="ypic" value="576"/>
        </data>
        <node id="readm4v" kind="vertex">
            <data key="graph_desc">../Code/IDL/readm4v.idl</data>
            <data key="name">readm4v</data>
            <data key="arguments">
                <argument name="nb_octet_to_read" value="414720"/>
            </data>
        </node>
        <node id="readm4v_double_buffering" kind="vertex">
            <data key="graph_desc">../Code/IDL/readm4v_double_buffering.idl</data>
            <data key="name">readm4v_double_buffering</data>
            <data key="arguments">
                <argument name="nb_octet_to_read" value="taille_flux"/>
            </data>
        </node>
        <node id="VideoObjectLayer" kind="vertex">
            <data key="graph_desc">../Code/IDL/VideoObjectLayer.idl</data>
            <data key="name">VideoObjectLayer</data>
            <data key="arguments">
                <argument name="length" value="taille_flux * 8* 2"/>
            </data>
        </node>
        <node id="buffer_out" kind="Broadcast"/>
        <node id="VOPsimple" kind="Broadcast"/>
        <node id="choix_I_P_haut_niveau" kind="vertex">
            <data key="graph_desc">../Code/IDL/decode_I_frame.idl</data>
            <data key="name">choix_I_P_haut_niveau</data>
            <data key="arguments"/>
        </node>
        <node id="VideoObjectPlane" kind="vertex">
            <data key="graph_desc">../Code/IDL/VideoObjectPlane.idl</data>
            <data key="name">VideoObjectPlane</data>
            <data key="arguments"/>
        </node>
        <node id="init_vlc_tables_I" kind="vertex">
            <data key="graph_desc">../Code/IDL/init_vlc_tables_I.idl</data>
            <data key="name">init_vlc_tables_I</data>
            <data key="arguments"/>
        </node>
        <node id="frame_Y" kind="Broadcast"/>
        <node id="frame_U" kind="Broadcast"/>
        <node id="frame_V" kind="Broadcast"/>
        <node id="new_buffer" kind="vertex">
            <data key="graph_desc">../Code/IDL/new_buffer.idl</data>
            <data key="name">new_buffer</data>
            <data key="arguments">
                <argument name="nb_octet_to_read" value="xpic*ypic"/>
            </data>
        </node>
        <node id="new_buff_o" kind="Broadcast"/>
        <node id="Extract" kind="vertex">
            <data key="graph_desc">../Code/IDL/extract.idl</data>
            <data key="name">Extract</data>
            <data key="arguments">
                <argument name="crop" value="0"/>
                <argument name="edge" value="16"/>
            </data>
        </node>
        <node id="viewer" kind="vertex">
            <data key="graph_desc">../Code/IDL/sdl.idl</data>
            <data key="name">viewer</data>
            <data key="arguments">
                <argument name="edge" value="16"/>
                <argument name="xpic" value="720"/>
                <argument name="ypic" value="576"/>
            </data>
        </node>
        <edge source="readm4v" sourceport="new_buffer"
            target="readm4v_double_buffering" targetport="buffer_new">
            <data key="edge_prod">taille_flux</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">taille_flux</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="readm4v_double_buffering" sourceport="buffer_out"
            target="buffer_out" targetport="in">
            <data key="edge_prod">taille_flux*2</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">taille_flux*2</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="buffer_out" sourceport="out"
            target="VideoObjectLayer" targetport="data">
            <data key="edge_prod">taille_flux*2</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">taille_flux*2</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="readm4v_double_buffering" sourceport="pos_o"
            target="VideoObjectLayer" targetport="pos_i">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="buffer_out" sourceport="out"
            target="readm4v_double_buffering" targetport="buffer_state">
            <data key="edge_prod">taille_flux*2</data>
            <data key="edge_delay">taille_flux*2</data>
            <data key="edge_cons">taille_flux*2</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="VideoObjectLayer" sourceport="VOLsimple"
            target="VOPsimple" targetport="in">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">struct_VOLsimple</data>
        </edge>
        <edge source="VOPsimple" sourceport="out"
            target="choix_I_P_haut_niveau" targetport="VOLsimple">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">struct_VOLsimple</data>
        </edge>
        <edge source="buffer_out" sourceport="out"
            target="choix_I_P_haut_niveau" targetport="data">
            <data key="edge_prod">taille_flux*2</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">taille_flux*2</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="VideoObjectLayer" sourceport="pos_o"
            target="VideoObjectPlane" targetport="pos_vol">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="VideoObjectLayer" sourceport="vop_complexity"
            target="VideoObjectPlane" targetport="vop_complexity">
            <data key="edge_prod">5</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">5</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="VOPsimple" sourceport="out"
            target="VideoObjectPlane" targetport="VOLsimple">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">struct_VOLsimple</data>
        </edge>
        <edge source="VideoObjectPlane" sourceport="pos"
            target="choix_I_P_haut_niveau" targetport="pos">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="VideoObjectPlane" sourceport="VOP"
            target="choix_I_P_haut_niveau" targetport="VOP">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">struct_VOP</data>
        </edge>
        <edge source="buffer_out" sourceport="out"
            target="VideoObjectPlane" targetport="data">
            <data key="edge_prod">taille_flux*2</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">taille_flux*2</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="init_vlc_tables_I" sourceport="DCT3D_I"
            target="choix_I_P_haut_niveau" targetport="DCT3D_I">
            <data key="edge_prod">4096</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">4096</data>
            <data key="data_type">REVERSE_EVENT</data>
        </edge>
        <edge source="VideoObjectPlane" sourceport="vop_coding_type"
            target="choix_I_P_haut_niveau" targetport="vop_coding_type">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="choix_I_P_haut_niveau" sourceport="frame_Y_o"
            target="frame_Y" targetport="in">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="choix_I_P_haut_niveau" sourceport="frame_U_o"
            target="frame_U" targetport="in">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="choix_I_P_haut_niveau" sourceport="frame_V_o"
            target="frame_V" targetport="in">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="frame_Y" sourceport="out"
            target="choix_I_P_haut_niveau" targetport="frame_Y_i">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="edge_delay">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="frame_U" sourceport="out"
            target="choix_I_P_haut_niveau" targetport="frame_U_i">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="frame_V" sourceport="out"
            target="choix_I_P_haut_niveau" targetport="frame_V_i">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="choix_I_P_haut_niveau" sourceport="pos_fin_vlc"
            target="new_buffer" targetport="pos">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="new_buffer" sourceport="new_buff_o"
            target="new_buff_o" targetport="in">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="new_buff_o" sourceport="out" target="readm4v" targetport="new_buff_i">
            <data key="edge_prod">1</data>
            <data key="edge_delay">1</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="new_buff_o" sourceport="out"
            target="readm4v_double_buffering" targetport="new_buff_i">
            <data key="edge_prod">1</data>
            <data key="edge_delay">1</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="new_buffer" sourceport="pos_octet"
            target="readm4v_double_buffering" targetport="pos_octet">
            <data key="edge_prod">1</data>
            <data key="edge_delay">1</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="frame_U" sourceport="out" target="Extract" targetport="RefU_i">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="frame_V" sourceport="out" target="Extract" targetport="RefV_i">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="frame_Y" sourceport="out" target="Extract" targetport="RefY_i">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="choix_I_P_haut_niveau" sourceport="adresse"
            target="Extract" targetport="adresse_pic">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="Extract" sourceport="Display_Extract_Image"
            target="viewer" targetport="Display_Extract_Image">
            <data key="edge_prod">685832</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">685832</data>
            <data key="data_type">image_type</data>
        </edge>
        <edge source="VideoObjectLayer" sourceport="xsize_o"
            target="Extract" targetport="xsize_i">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="VideoObjectLayer" sourceport="ysize_o"
            target="Extract" targetport="ysize_i">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="choix_I_P_haut_niveau" sourceport="keyframes_o"
            target="choix_I_P_haut_niveau" targetport="keyframes_i">
            <data key="edge_prod">2</data>
            <data key="edge_delay">2</data>
            <data key="edge_cons">2</data>
            <data key="data_type">int</data>
        </edge>
    </graph>
</graphml>
