<?xml version="1.0" encoding="UTF-8"?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns">
    <key attr.name="graph_desc" attr.type="string" for="node" id="graph_desc"/>
    <key attr.name="name" attr.type="string" for="graph" id="name"/>
    <key attr.name="name" attr.type="string" for="node" id="name"/>
    <key attr.name="arguments" attr.type="string" for="node" id="arguments"/>
    <key attr.name="parameters" attr.type="string" for="graph" id="parameters"/>
    <key attr.name="variables" attr.type="string" for="graph" id="variables"/>
    <key attr.name="edge_prod" attr.type="string" for="edge" id="edge_prod">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="edge_delay" attr.type="string" for="edge" id="edge_delay">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="edge_cons" attr.type="string" for="edge" id="edge_cons">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFNumericalEdgePropertyTypeFactory</desc>
    </key>
    <key attr.name="data_type" attr.type="string" for="edge" id="data_type">
        <desc>net.sf.dftools.algorithm.model.sdf.types.SDFTextualEdgePropertyTypeFactory</desc>
    </key>
    <graph edgedefault="directed">
        <data key="name"/>
        <data key="parameters"/>
        <data key="variables">
            <variable name="NB_MB" value="20"/>
            <variable name="edge" value="16"/>
            <variable name="taille_flux" value="720*576"/>
            <variable name="xpic" value="720"/>
            <variable name="ypic" value="576"/>
        </data>
        <node id="data" kind="port" port_direction="Input"/>
        <node id="pos_o" kind="port" port_direction="Input"/>
        <node id="VOP" kind="port" port_direction="Input"/>
        <node id="MB_pos_i" kind="port" port_direction="Input"/>
        <node id="VOLsimple" kind="port" port_direction="Input"/>
        <node id="frame_U_o" kind="port" port_direction="Output"/>
        <node id="frame_V_o" kind="port" port_direction="Output"/>
        <node id="frame_Y_o" kind="port" port_direction="Output"/>
        <node id="pos_fin_vlc" kind="port" port_direction="Output"/>
        <node id="InverseQuant_BlkXn_3" kind="port" port_direction="Input"/>
        <node id="InverseQuant_BlkXn_2" kind="port" port_direction="Input"/>
        <node id="tab_pos_X" kind="port" port_direction="Input"/>
        <node id="bidon_decode_I" kind="vertex">
            <data key="graph_desc">decode_I.graphml</data>
            <data key="name">bidon_decode_I</data>
            <data key="arguments"/>
        </node>
        <node id="DCT3D_I" kind="port" port_direction="Input"/>
        <node id="keyframes" kind="port" port_direction="Input"/>
        <node id="adresse" kind="port" port_direction="Input"/>
        <node id="Y" kind="port" port_direction="Input"/>
        <node id="U" kind="port" port_direction="Input"/>
        <node id="V" kind="port" port_direction="Input"/>
        <node id="keyframes_out" kind="port" port_direction="Output"/>
        <edge source="data" sourceport="" target="bidon_decode_I" targetport="data">
            <data key="edge_prod">taille_flux*2</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">taille_flux*2</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="pos_o" sourceport="" target="bidon_decode_I" targetport="pos_o">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="tab_pos_X" sourceport="" target="bidon_decode_I" targetport="tab_pos_X">
            <data key="edge_prod">4</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">4</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="VOP" sourceport="" target="bidon_decode_I" targetport="VOP">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">struct_VOP</data>
        </edge>
        <edge source="MB_pos_i" sourceport="" target="bidon_decode_I" targetport="MB_pos_i">
            <data key="edge_prod">99</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="VOLsimple" sourceport="" target="bidon_decode_I" targetport="VOLsimple">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">struct_VOLsimple</data>
        </edge>
        <edge source="InverseQuant_BlkXn_3" sourceport=""
            target="bidon_decode_I" targetport="InverseQuant_BlkXn_3">
            <data key="edge_prod">16</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">16</data>
            <data key="data_type">short</data>
        </edge>
        <edge source="InverseQuant_BlkXn_2" sourceport=""
            target="bidon_decode_I" targetport="InverseQuant_BlkXn_2">
            <data key="edge_prod">16</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">16</data>
            <data key="data_type">short</data>
        </edge>
        <edge source="bidon_decode_I" sourceport="frame_U_o"
            target="frame_U_o" targetport="">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="bidon_decode_I" sourceport="frame_V_o"
            target="frame_V_o" targetport="">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="bidon_decode_I" sourceport="frame_Y_o"
            target="frame_Y_o" targetport="">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="bidon_decode_I" sourceport="pos_fin_vlc"
            target="pos_fin_vlc" targetport="">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="DCT3D_I" sourceport="" target="bidon_decode_I" targetport="DCT3D_I">
            <data key="edge_prod">4096</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">4096</data>
            <data key="data_type">REVERSE_EVENT</data>
        </edge>
        <edge source="keyframes" sourceport="" target="bidon_decode_I" targetport="keyframes">
            <data key="edge_prod">2</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">2</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="adresse" sourceport="" target="bidon_decode_I" targetport="adresse">
            <data key="edge_prod">1</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">1</data>
            <data key="data_type">int</data>
        </edge>
        <edge source="Y" sourceport="" target="bidon_decode_I" targetport="Y">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="U" sourceport="" target="bidon_decode_I" targetport="U">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="V" sourceport="" target="bidon_decode_I" targetport="V">
            <data key="edge_prod">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">(xpic+2*edge)*(ypic+2*edge)/4*3</data>
            <data key="data_type">uchar</data>
        </edge>
        <edge source="bidon_decode_I" sourceport="keyframes_out"
            target="keyframes_out" targetport="">
            <data key="edge_prod">2</data>
            <data key="edge_delay">0</data>
            <data key="edge_cons">2</data>
            <data key="data_type">int</data>
        </edge>
    </graph>
</graphml>
