<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <artifactId>org.ietr.preesm.complete.site</artifactId>
  <packaging>eclipse-repository</packaging>

  <parent>
    <groupId>org.ietr.preesm</groupId>
    <artifactId>org.ietr.preesm.releng</artifactId>
    <version>2.2.8</version>
    <relativePath>..</relativePath>
  </parent>

  <pluginRepositories>
    <pluginRepository>
      <id>preesm</id>
      <url>http://preesm.sourceforge.net/maven/</url>
    </pluginRepository>
  </pluginRepositories>

  <!-- 
	Make sure the product is built first to copy its generated products. 
	Make it a POM dependency to prevent compiler to fail finding java 
	dependencies.
	-->
  <dependencies>
    <dependency>
      <groupId>org.ietr.preesm</groupId>
      <artifactId>org.ietr.preesm.product</artifactId>
      <version>2.2.8</version>
      <type>eclipse-repository</type>
    </dependency>
  </dependencies>
  
  <build>
    <plugins>
      <!-- This plugins builds the update site for the current release and
        puts all files in ${project.build.directory}/repository -->
      <plugin>
        <groupId>org.eclipse.tycho</groupId>
        <artifactId>tycho-p2-repository-plugin</artifactId>
        <version>${tycho-version}</version>
        <configuration>
          <includeAllDependencies>true</includeAllDependencies>
          <compress>false</compress>
          <repositoryName>IETR/INSA - Rennes PREESM Update Site</repositoryName>
          <skipArchive>true</skipArchive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>
        <configuration>
          <failOnError>false</failOnError>
        </configuration>
        <executions>
          <execution>
            <id>javadoc-gen</id>
            <phase />
          </execution>
          <execution>
            <id>javadoc-aggregation</id>
            <phase>package</phase>
            <goals>
              <goal>javadoc-no-fork</goal>
            </goals>
            <configuration>
              <failOnError>false</failOnError>
              <!-- switch on dependency-driven aggregation -->
              <includeDependencySources>true</includeDependencySources>
              <!-- include ONLY dependencies with same groupId -->
              <dependencySourceIncludes>
                <dependencySourceInclude>${project.groupId}:*</dependencySourceInclude>
              </dependencySourceIncludes>
              <!-- make sure aggregated javadoc is put in the complete site -->
              <reportOutputDirectory>${project.build.directory}/gensite/API/</reportOutputDirectory>
              <destDir>${project.groupId}-${project.version}</destDir>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- ## NOTE: make sure this is after the tycho-p2-extras-plugin
          in the pom.xml text -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>copy-repo</id>
            <phase>package</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target name="Copy content">
                <!-- Copy repo to gensite folder -->
                <copy
                  todir="${project.build.directory}/gensite/update-site/${project.groupId}-${project.version}/">
                  <fileset dir="${project.build.directory}/repository/" />
                </copy>
                <!-- Web resources for the current release -->
                <copy
                  todir="${project.build.directory}/gensite/update-site/${project.groupId}-${project.version}/web/">
                  <fileset dir="${basedir}/web" includes="*" />
                </copy>
                <copy
                  todir="${project.build.directory}/gensite/update-site/${project.groupId}-${project.version}/">
                  <fileset dir="${basedir}" includes="index.html" />
                </copy>
                <copy file="${project.build.directory}/category.xml"
                  tofile="${project.build.directory}/gensite/update-site/${project.groupId}-${project.version}/site.xml" />
                <!-- Add symlink for latest release -->
                <symlink
                  link="${project.build.directory}/gensite/update-site/${project.groupId}-latest"
                  resource="${project.groupId}-${project.version}" />
                  
                <!-- Copy products -->
                <copy
                  todir="${project.build.directory}/gensite/products/${project.version}/">
                  <fileset dir="${project.basedir}/../org.ietr.preesm.product/target/products/" includes="*.zip, *.tar.gz" />
                </copy>
                <!-- Add symlink for latest product -->
                <symlink
                  link="${project.build.directory}/gensite/products/latest"
                  resource="${project.version}" />
              </target>
              <exportAntProperties>true</exportAntProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
        <version>1.3.0</version>
        <executions>
          <execution>
            <phase>deploy</phase>
            <id>fetch-artifacts.xml</id>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <skipCache>true</skipCache>
              <url>${complete.p2.repo}/artifacts.xml</url>
              <outputFileName>artifacts.xml</outputFileName>
              <outputDirectory>${project.build.directory}/gensite/update-site/complete/</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <phase>deploy</phase>
            <id>fetch-content.xml</id>
            <goals>
              <goal>wget</goal>
            </goals>
            <configuration>
              <skipCache>true</skipCache>
              <url>${complete.p2.repo}/content.xml</url>
              <outputFileName>content.xml</outputFileName>
              <outputDirectory>${project.build.directory}/gensite/update-site/complete/</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.eclipse.tycho.extras</groupId>
        <artifactId>tycho-p2-extras-plugin</artifactId>
        <version>${tycho-version}</version>
        <executions>
          <execution>
            <id>append-current-build</id>
            <phase>deploy</phase>
            <goals>
              <goal>mirror</goal>
            </goals>
            <configuration>
              <source>
                <repository>
                  <url>${project.baseUri}/target/gensite/update-site/${project.groupId}-${project.version}</url>
                </repository>
              </source>
              <append>true</append>
              <compress>false</compress>
              <includeOptional>true</includeOptional>
              <destination>${project.build.directory}/gensite/update-site/complete</destination>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Finally upload merged metadata and new content -->
      <plugin>
        <groupId>org.ietr.maven</groupId>
        <artifactId>sftp-maven-plugin</artifactId>
        <version>2.1.0</version>
        <executions>
          <execution>
            <id>upload-repo</id>
            <phase>deploy</phase>
            <configuration>
              <serverId>sf-preesm-update-site</serverId>
              <serverHost>web.sourceforge.net</serverHost>
              <strictHostKeyChecking>false</strictHostKeyChecking>
              <transferThreadCount>12</transferThreadCount>
              <mode>send</mode>
              <remotePath>/home/project-web/preesm/htdocs/gensite/</remotePath>
              <localPath>${project.build.directory}/gensite/</localPath>
            </configuration>
            <goals>
              <goal>sftp-transfert</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
