<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright or © or Copr. IETR/INSA - Rennes (2008 - 2017) :

    Antoine Morvan <antoine.morvan@insa-rennes.fr> (2017)
    Clément Guy <clement.guy@insa-rennes.fr> (2014 - 2015)
    Matthieu Wipliez <matthieu.wipliez@insa-rennes.fr> (2008)
    Maxime Pelcat <maxime.pelcat@insa-rennes.fr> (2008 - 2012)

    This software is a computer program whose purpose is to help prototyping
    parallel applications using dataflow formalism.

    This software is governed by the CeCILL  license under French law and
    abiding by the rules of distribution of free software.  You can  use,
    modify and/ or redistribute the software under the terms of the CeCILL
    license as circulated by CEA, CNRS and INRIA at the following URL
    "http://www.cecill.info".

    As a counterpart to the access to the source code and  rights to copy,
    modify and redistribute granted by the license, users are provided only
    with a limited warranty  and the software's author,  the holder of the
    economic rights,  and the successive licensors  have only  limited
    liability.

    In this respect, the user's attention is drawn to the risks associated
    with loading,  using,  modifying and/or developing or reproducing the
    software by the user in light of its specific status of free software,
    that may mean  that it is complicated to manipulate,  and  that  also
    therefore means  that it is reserved for developers  and  experienced
    professionals having in-depth computer knowledge. Users are therefore
    encouraged to load and test the software's suitability as regards their
    requirements in conditions enabling the security of their systems and/or
    data to be ensured and,  more generally, to use and operate it in the
    same conditions as regards security.

    The fact that you are presently reading this means that you have had
    knowledge of the CeCILL license and that you accept its terms.

-->
<?eclipse version="3.2"?>

<plugin>
   <extension
         point="org.preesm.workflow.scenarios">
      <scenario
            id="org.ietr.preesm.scenario.task"
            type="org.ietr.preesm.core.workflow.AlgorithmAndArchitectureScenarioNode">
         <outputs>
            <output
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </output>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
            <output
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </output>
            <output
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </output>
         </outputs>
      </scenario>
   </extension>


   <extension
         point="org.preesm.workflow.tasks">

      <task
            id="org.ietr.preesm.Clustering"
            name="Clustering"
            type="org.ietr.preesm.clustering.Clustering">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
         </outputs>
      </task>

      <task
            id="org.ietr.preesm.memory.bounds.MemoryBoundsEstimator"
            name="Memory Bounds Estimator"
            type="org.ietr.preesm.memory.bounds.MemoryBoundsEstimator">
         <outputs>
            <output
                  id="BoundMin"
                  object="java.lang.Long">
            </output>
            <output
                  id="BoundMax"
                  object="java.lang.Long">
            </output>
            <output
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </output>
         </outputs>
         <inputs>
            <input
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraphBuilder"
            name="Memory Exclusion Graph Builder"
            type="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraphBuilder">
         <inputs>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.memory.bounds.SerialMemoryBoundsEstimator"
            name="Serial Memory Bounds Estimator"
            type="org.ietr.preesm.memory.bounds.SerialMemoryBoundsEstimator">
         <inputs>
            <input
                  id="MEGs"
                  object="java.util.Map">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.memory.exclusiongraph.MemExUpdater"
            name="MemEx Updater"
            type="org.ietr.preesm.memory.exclusiongraph.MemExUpdater">
         <inputs>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
            <input
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.memory.allocation.MemoryAllocatorTask"
            name="Memory Allocator"
            type="org.ietr.preesm.memory.allocation.MemoryAllocatorTask">
         <inputs>
            <input
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="MEGs"
                  object="java.util.Map">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.memory.script.MemoryScriptTask"
            name="Memory Script Runner"
            type="org.ietr.preesm.memory.script.MemoryScriptTask">
         <inputs>
            <input
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </input>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.memory.distributed.MapperTask"
            name="Memory Exclusion Graph Mapper"
            type="org.ietr.preesm.memory.distributed.MapperTask">
         <inputs>
            <input
                  id="MemEx"
                  object="org.ietr.preesm.memory.exclusiongraph.MemoryExclusionGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="MemExes"
                  object="java.util.Map">
            </output>
         </outputs>
      </task>


      <task
            id="org.ietr.preesm.plugin.architransfo.transforms.ArchitectureExporter"
            name="Architecture exporter"
            type="org.ietr.preesm.architecture.transforms.ArchitectureExporter">
         <inputs>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.archi.slam.flattening"
            name="Slam Hierarchy Flattening"
            type="org.ietr.preesm.architecture.slam.SlamHierarchyFlattening">
         <inputs>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
         <outputs>
            <output
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </output>
         </outputs>
      </task>

      <task
            id="org.ietr.preesm.pimm.algorithm.spider.codegen.SpiderCodegenTask"
            name="Spider Codegen from PiMM Models Task"
            type="org.ietr.preesm.pimm.algorithm.spider.codegen.SpiderCodegenTask">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.experiment.pimm2sdf.StaticPiMM2SDFTask"
            name="Static PiMM to SDF transformation"
            type="org.ietr.preesm.pimm.algorithm.pimm2sdf.StaticPiMM2SDFTask">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.experiment.pimm.subgraph.connector.SubgraphConnectorTask"
            name="PiMM Subgraph Connector Task"
            type="org.ietr.preesm.pimm.algorithm.subgraph.connector.SubgraphConnectorTask">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph"></output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.experiment.model.transformation.taskExpression"
            name="PREESM PiSDF Stats Printer"
            type="org.ietr.preesm.pimm.algorithm.stats.printer.PrintPISDFStats">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.pimm.checker.task.PiMMAlgorithmCheckerTask"
            name="PiMM Checker"
            type="org.ietr.preesm.pimm.algorithm.checker.task.PiMMAlgorithmCheckerTask">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.experiment.pimm2srdag.StaticPiMM2SrDAGTask"
            name="Static PiMM to Single-Rate DAG transformation"
            type="org.ietr.preesm.pimm.algorithm.pimm2srdag.StaticPiMM2SrDAGTask">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.pimm.algorithm.pimm2flat.StaticPiMM2FlatPiMMTask"
            name="Static PiMM to Flat PiMM transformation"
            type="org.ietr.preesm.pimm.algorithm.pimm2flat.StaticPiMM2FlatPiMMTask">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.pimm.algorithm.checker.periods.PeriodsPreschedulingChecker"
            name="Periods Prescheduling Checker"
            type="org.ietr.preesm.pimm.algorithm.checker.periods.PeriodsPreschedulingChecker">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
         <outputs>
            <output
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </output>
         </outputs>
      </task>


      <task
            id="org.ietr.preesm.plugin.exportXml.sdf4jgml"
            name="SDF4J GML Exporter "
            type="org.ietr.preesm.algorithm.exportXml.SDFExporter">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.transforms.sdf2hsdf"
            name="SDF2HSDF"
            type="org.ietr.preesm.algorithm.transforms.HSDFTransformation">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.transforms.flathierarchy"
            name="Hierarchy flattening"
            type="org.ietr.preesm.algorithm.transforms.HierarchyFlattening">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.algorithm.randomsdf.RandomSDF"
            name="Random SDF Generator"
            type="org.ietr.preesm.algorithm.randomsdf.RandomSDF">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
            <output
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.algorithm.importSdf3Xml.Sdf3Importer"
            name="SDF3 Importer"
            type="org.ietr.preesm.algorithm.importSdf3Xml.Sdf3Importer">
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
            <output
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </output>
         </outputs>
         <inputs>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.algorithm.exportSdf3Xml.Sdf3Exporter"
            name="SDF3 Exporter"
            type="org.ietr.preesm.algorithm.exportSdf3Xml.Sdf3Exporter">
         <inputs>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.algorithm.transforms.IterateAlgorithm"
            name="Algorithm Iterator"
            type="org.ietr.preesm.algorithm.transforms.IterateAlgorithm">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.algorithm.exportXml.pimm2xml"
            name="PiSDFExporter"
            type="org.ietr.preesm.algorithm.exportXml.PiSDFExporter">
         <inputs>
            <input
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.evaluator.PeriodicEvaluator"
            name="Periodic Schedule Evaluation"
            type="org.ietr.preesm.evaluator.PeriodicEvaluator">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
            <output
                  id="Throughput"
                  object="java.lang.Double">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.throughput.ThroughputPlugin"
            name="Throughput Evaluation"
            type="org.ietr.preesm.throughput.ThroughputEvaluationTask">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
            <output
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </output>
            <output
                  id="throughput"
                  object="java.lang.Double">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.latency.LatencyEvaluationPlugin"
            name="Latency Evaluation"
            type="org.ietr.preesm.latency.LatencyEvaluationTask">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
            <output
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </output>
            <output
                  id="latency"
                  object="java.lang.Double">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.latency.LatencyExplorationPlugin"
            name="Latency Exploration"
            type="org.ietr.preesm.latency.LatencyExplorationTask">
      </task>


      <task
            id="org.ietr.preesm.mapper.getpimm"
            name="GetPiMM"
            type="org.ietr.preesm.mapper.GetPiMMFromDAGTask">
         <inputs>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="PiMM"
                  object="org.preesm.model.pisdf.PiGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.exporter.ImplExportTransform"
            name="Implementation Exporter"
            type="org.ietr.preesm.mapper.exporter.ImplExportTransform">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
         <outputs>
            <output
                  id="xml"
                  object="java.lang.String">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.XsltTransform"
            name="Xslt file transformation"
            type="org.ietr.preesm.mapper.exporter.XsltTransform">
         <inputs>
            <input
                  id="xml"
                  object="java.lang.String">
            </input>
         </inputs>
         <outputs>
            <output
                  id="xml"
                  object="java.lang.String">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.fast"
            name="Kwok FAST algorithm"
            type="org.ietr.preesm.mapper.FASTMapping">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.pfast"
            name="Kwok PFAST algorithm (parallel version of FAST)"
            type="org.ietr.preesm.mapper.PFASTMapping">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.listscheduling"
            name="Kwok list scheduling algorithm"
            type="org.ietr.preesm.mapper.ListSchedulingMapping">
         <inputs>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.plot"
            name="Gantt plot transform"
            type="org.ietr.preesm.mapper.ui.stats.StatEditorTransform">
         <inputs>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.scenariogen.ScenarioGenerator"
            name="Scenario Generator"
            type="org.ietr.preesm.mapper.scenariogen.ScenarioGenerator">
         <outputs>
            <output
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </output>
            <output
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </output>
            <output
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.mapper.exporter.DAGExportTransform"
            name="DAG Exporter"
            type="org.ietr.preesm.mapper.exporter.DAGExportTransform">
         <inputs>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.stats.exporter.StatsExporterTask"
            name="Preesm Stats Exporter"
            type="org.ietr.preesm.mapper.stats.exporter.StatsExporterTask">
         <inputs>
            <input
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
         </inputs>
      </task>

      <!-- Activity / LSLA related tasks -->
      <task
            id="org.ietr.preesm.algorithm.moa.activity.ActivityExporter"
            name="Activity Exporter of Tokens and Quanta"
            type="org.ietr.preesm.algorithm.moa.activity.ActivityExporter">
         <inputs>
            <input
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.algorithm.moa.activity.CustomQuantaExporter"
            name="Activity Exporter of Custom Quanta"
            type="org.ietr.preesm.algorithm.moa.activity.CustomQuantaExporter">
         <inputs>
            <input
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.algorithm.moa.activity.MonoActivityExporter"
            name="Activity Exporter of Tokens and Quanta for a single ABC"
            type="org.ietr.preesm.algorithm.moa.activity.MonoActivityExporter">
         <inputs>
            <input
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </input>
         </inputs>
      </task>
      <task
            id="org.ietr.preesm.mapper.SDF2DAGTransformation"
            name="Single rate SDF to DAG Transformation"
            type="org.ietr.preesm.mapper.graphtransfo.SDF2DAGTransformation">
         <inputs>
            <input
                  id="SDF"
                  object="org.ietr.dftools.algorithm.model.sdf.SDFGraph">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.listschedulingfromdag"
            name="List scheduling algorithm (DAG)"
            type="org.ietr.preesm.mapper.ListSchedulingMappingFromDAG">
         <inputs>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.pfastdag"
            name="PFAST algorithm (parallel version of FAST) (DAG)"
            type="org.ietr.preesm.mapper.PFASTMappingFromDAG">
         <inputs>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.fastdag"
            name="FAST algorithm (DAG)"
            type="org.ietr.preesm.mapper.FASTMappingFromDAG">
         <inputs>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.external"
            name="External Scheduler (DAG)"
            type="org.ietr.preesm.mapper.ExternalMappingFromDAG">
         <inputs>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
      <task
            id="org.ietr.preesm.plugin.mapper.simple"
            name="Main Core Simple Mapping (DAG)"
            type="org.ietr.preesm.mapper.MainCoreMappingFromDAG">
         <inputs>
            <input
                  id="architecture"
                  object="org.preesm.model.slam.Design">
            </input>
            <input
                  id="scenario"
                  object="org.ietr.preesm.core.scenario.PreesmScenario">
            </input>
            <input
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </input>
         </inputs>
         <outputs>
            <output
                  id="DAG"
                  object="org.ietr.dftools.algorithm.model.dag.DirectedAcyclicGraph">
            </output>
            <output
                  id="ABC"
                  object="org.ietr.preesm.mapper.abc.impl.latency.LatencyAbc">
            </output>
         </outputs>
      </task>
   </extension>


   <extension
         point="org.eclipse.ui.editors">
      <editor
            class="org.ietr.preesm.mapper.ui.bestcost.BestCostEditor"
            default="true"
            icon="icons/preesm4mini.PNG"
            id="org.ietr.preesm.plugin.mapper.plot.TimeEditor"
            name="TimeEditor">
      </editor>
      <editor
            class="org.ietr.preesm.mapper.ui.stats.StatEditor"
            default="false"
            icon="icons/preesm2mini.PNG"
            id="org.ietr.preesm.plugin.mapper.plot.stats.StatEditor"
            name="StatEditor">
      </editor>
      <editor
            class="org.ietr.preesm.mapper.ui.gantt.GanttEditor"
            default="true"
            icon="icons/preesm3mini.PNG"
            id="org.ietr.preesm.mapper.plot.GanttEditor"
            name="GanttEditor">
      </editor>
   </extension>

</plugin>
