
@GenModel(
	modelName="Slam", prefix="Link",
	modelDirectory="/org.preesm.model.slam/ecore-gen",
//	editDirectory="/org.ietr.dftools.architecture.edit/ecore-gen",
//	editorDirectory="/org.ietr.dftools.architecture.editor/ecore-gen",
//	testsDirectory="/org.ietr.dftools.architecture.tests/ecore-gen",

	// redirection="",
	// classNamePattern="",

	// codeFormatting="true",
	// cleanup="true",

	importerID="org.eclipse.emf.importer.ecore",

	// !! if true a instrs.ecore is generated in .impl and is used by xxpackage.init() to
	// load the intrs packages (by default this false unless the generated XyzPackage might
	// exceed Java's byte code limit of 64k)
	loadInitialization="false",
	creationCommands="false",
	creationIcons="false",
	dataTypeConverters="false",
	operationReflection="false",
	complianceLevel="8.0"
)

@Ecore(nsURI="http://org.preesm/model/slam/link")



package org.preesm.model.slam.link

import org.preesm.model.slam.ComponentInstance
import org.preesm.model.slam.component.ComInterface
import org.preesm.commons.exceptions.PreesmRuntimeException


// !!! This is needed as of the current versions of xcore/xtext
// For some reason when using the default String/... (i.e. without the following)
// the corresponding EPackage attributes/... are resolved to type java.lang.Object
// instead of java.lang.String.
// This causes a problem for Tom mapping generation for instance.
// The following fixes this problem.
type String wraps String
type int wraps int
type long wraps long
type double wraps double


abstract class Link {
	refers ComInterface sourceInterface
	refers ComInterface destinationInterface
	refers ComponentInstance sourceComponentInstance
	refers ComponentInstance destinationComponentInstance
	String uuid
	boolean directed = "false"

	op ComponentInstance getOtherEnd(ComponentInstance oneEnd) {
		if (sourceComponentInstance.instanceName == oneEnd.instanceName) {
			return destinationComponentInstance;
		} else if (destinationComponentInstance.instanceName == oneEnd.instanceName) {
			return sourceComponentInstance;
		} else {
			throw new PreesmRuntimeException("The given end is not related to this link");
		}
	}
}

class DataLink extends Link {
}

class ControlLink extends Link {
}
